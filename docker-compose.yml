# Docker Compose for production deployment with HTTPS
version: "3.8"

services:
  # Your Node.js API
  api:
    build: .
    container_name: cycleoptima-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
      - HOST=0.0.0.0
    volumes:
      - ./.env:/app/.env:ro
    networks:
      - app-network
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: cycleoptima-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-secretpassword}
      - MYSQL_DATABASE=${DB_NAME:-cycleoptima}
      - MYSQL_USER=${DB_USER:-apiuser}
      - MYSQL_PASSWORD=${DB_PASSWORD:-apipassword}
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - app-network

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: cycleoptima-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
